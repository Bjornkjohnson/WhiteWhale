#+TITLE: APP_INFO
#+BEGIN_SRC
#+END_SRC

* Git Links
Links Below for working with Git.  Branching and merging need to be solid. Also, need to be solid about
flow of code from Dev --->Test ---> Prod , to keep clean code only in Production. 

[add ssh key] (https://help.github.com/articles/changing-a-remote-s-url/)
[git branching](http://www.git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging)
[markdown guide for wiki] (https://guides.github.com/features/mastering-markdown/)
[emoji:whale:](http://www.emoji-cheat-sheet.com/)

* Git Commands:

** Configuring fork :
https://help.github.com/articles/configuring-a-remote-for-a-fork/ 

** Add upstream 
** add upstream 
$ git remote add upstream https://github.com/WhiteWhaleXYZ/WhiteWhale.git
** $ git remote -v

# origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
# origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
# upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)
# upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push) 

** PUSHING AND PULLING 
#+BEGIN_SRC:

$ git pull
$ git push 

#+END_SRC:

** REVERTING UNWANTED CHANGES 
#+BEGIN_SRC:

$ git pull
$ git push 

#+END_SRC:

Below info on file reverting from : 
http://www.norbauer.com/rails-consulting/notes/git-revert-reset-a-single-file.html

This one is hard to find out there so here it is. If you have an uncommitted change (its only in your working copy) that you wish to revert (in SVN terms) to the copy in your latest commit, do the following:

git checkout filename

This will checkout the file from HEAD, overwriting your change. This command is also used to checkout branches, and you could happen to have a file with the same name as a branch. All is not lost, you will simply need to type:

git checkout -- filename

You can also do this with files from other branches, and such. man git-checkout has the details.

The rest of the Internet will tell you to use git reset --hard, but this resets all uncommitted changes youâ€™ve made in your working copy. Type this with care.


#+BEGIN_SRC:


#+END_SRC:

* Bundle commands 
#+BEGIN_SRC
// Dev 
$ bundle exec rake db:migrate RAILS_ENV=development 
$ bundle install --path vendor/bundle

// Production 
$ bundle install --deployment
$ RAILS_ENV=production bundle exec rake db:migrate
#+END_SRC
* App Server Commands :
#+BEGIN_SRC:
// Production Kill the puma pid 
$ kill -s SIGTERM `cat tmp/puma/pid
$ bundle exec puma -C config/puma.rb
#+END_SRC:


* Ruby version
2.2.0
* Rails Version
4.2.0
* System dependencies
* Configuration
Gemfile INFO : 
#+BEGIN_SRC: 
# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
gem 'rails', '4.2.0'
# Use sqlite3 as the database for Active Record USE : FOR DEV ONLY :
gem 'sqlite3'
# Use SCSS for stylesheets
gem 'sass-rails', '~> 5.0'
# Use Uglifier as compressor for JavaScript assets
gem 'uglifier', '>= 1.3.0'
# Use CoffeeScript for .coffee assets and views
gem 'coffee-rails', '~> 4.1.0'
# See https://github.com/sstephenson/execjs#readme for more supported runtimes
# gem 'therubyracer', platforms: :ruby

# Use jquery as the JavaScript library
gem 'jquery-rails'
# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks
gem 'turbolinks'
# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
gem 'jbuilder', '~> 2.0'
# bundle exec rake doc:rails generates the API under doc/api.
gem 'sdoc', '~> 0.4.0', group: :doc

# Use ActiveModel has_secure_password
# gem 'bcrypt', '~> 3.1.7'

# Puma appserver recommended over Unicorn 
gem 'pum 

# Use Capistrano for deployment
# gem 'capistrano-rails', group: :development

group :development, :test do
  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
  gem 'byebug'

  # Access an IRB console on exception pages or by using <%= console %> in views
  gem 'web-console', '~> 2.0'

  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
  gem 'spring'
end
#+END_SRC:
* Database creation

* Database initialization
* Database migrations and console
    #+BEGIN_SRC
    $ bundle exec rails generate migration AddNameToPods name:string
    $ bundle exec rails generate migration RemoveNameFromPods name:string

    $ bundle exec rails console
      >Pods.count
       1
      >Pods.first


    #+END_SRC

* How to run the test suite
#+BEGIN_SRC: 
$ bundle exec rake test 
#+END_SRC:
* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions




